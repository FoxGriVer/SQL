2.3 Выпускник претендует на красный диплом, если выполняются два условия одновременно: средний балл по результатам обучения в группе не менее 4.75 и за время обучения полученные отметки по «дисциплинам в семестре» не ниже «хорошо». Вывести ФИО студентов с указанием, получит ли выпускник красный диплом (только «да»/«нет»)

SELECT Студенты.Фамилия , Студенты.Имя , Студенты.Отчество, AVG([Зачётная ведомость].Отметка) AS 'СРЕДНИЙ БАЛЛ',
CASE
	WHEN AVG([Зачётная ведомость].Отметка) > 4.75 AND MIN([Зачётная ведомость].Отметка) IN (4,5)
 THEN 'ДА'
	ELSE 'НЕТ'
	END AS 'Красный диплом' 
FROM Студенты
INNER JOIN [Студенты в группах] ON Студенты.[ID студента] = [Студенты в группах].[ID студента]
INNER JOIN [Зачётная ведомость] ON [Студенты в группах].[ID группы] = [Зачётная ведомость].[ID группы] 
AND [Зачётная ведомость].[ID студента] = [Студенты в группах].[ID студента]
GROUP BY Студенты.Фамилия , Студенты.Имя , Студенты.Отчество

2.9	 Построить таблицу для указанного института, в которой для каждой группы указать количество студентов бюджетной, договорной и целевой форм оплаты.

SELECT gr1.Наименование, COUNT(case when fo.[Код формы оплаты] = '1' then 1 end) AS 'Бюджет',
COUNT(case when fo.[Код формы оплаты] = '2' then 1 end) AS 'Договор',
COUNT(case when fo.[Код формы оплаты] = '3' then 1 end) AS 'Целевая'
FROM [Студенты в группах] svg
INNER JOIN Группы gr1 ON svg.[ID группы] = gr1.[ID группы]
inner join [Формы оплаты] fo ON fo.[Код формы оплаты] = svg.[Код формы оплаты]
GROUP BY gr1.Наименование


1.3	 Вывести список групп, обучающихся в университете в настоящее время.
SELECT Группы.Наименование
FROM Группы
INNER JOIN [Студенты в группах] ON [Студенты в группах].[ID группы] = Группы.[ID группы]
WHERE GETDATE() BETWEEN (DATEFROMPARTS(Группы.[Год поступления], 9,1 )) AND
(DATEFROMPARTS(Группы.[Год поступления] + Группы.[Длительность обучения], 5,31 ))
GROUP BY Группы.Наименование
HAVING COUNT([Студенты в группах].[ID студента]) > 0



1.7	 Вывести списки групп, упорядоченные по алфавиту, в следующем формате:
Таблица 1.1
Группа	№ п/п	ФИО
8и01	1	Абрамов Абрам Абрамович
8и01	2	Викторов Виктор Викторович
8и01	3	Григорьев Григорий Григорьевич
8и02	1	Борисов Борис Борисович
8и02	2	Михайлов Михаил Михайлович

SELECT Группы.Наименование, ROW_NUMBER() OVER(PARTITION BY Группы.Наименование 
ORDER BY Студенты.Фамилия, Студенты.Имя, Студенты.Отчество ) AS '№ п/п', 
(Студенты.Фамилия + ' ' + Студенты.Имя + ' ' + Студенты.Отчество) AS 'ФИО'
FROM Группы
INNER JOIN [Студенты в группах] ON [Студенты в группах].[ID группы] = Группы.[ID группы]
INNER JOIN Студенты ON Студенты.[ID студента] = [Студенты в группах].[ID студента]
ORDER BY Группы.Наименование

2.6 Вывести ФИО студентов, обучающихся более чем в двух группах одновременно, при этом вывести форму оплаты (ФО) следующим образом: если во всех группах он обучается по одной ФО, то вывести её, иначе вывести «разное».

SELECT DISTINCT Студенты.Имя, Студенты.Фамилия, Студенты.Фамилия,
CASE 
	WHEN count(case when st2.[Код формы оплаты] <> st1.[Код формы оплаты] then 1 end) = 1 THEN 'Разное'
	ELSE [Формы оплаты].Наименование
	END AS 'Форма оплаты'
FROM [Студенты в группах] st1
INNER JOIN [Студенты в группах] st2 ON st1.[ID студента] = st2.[ID студента]
INNER JOIN [Формы оплаты] ON [Формы оплаты].[Код формы оплаты] = st1.[Код формы оплаты]
INNER JOIN Студенты ON Студенты.[ID студента] = st1.[ID студента]
GROUP BY Студенты.Имя, Студенты.Фамилия, Студенты.Фамилия, [Формы оплаты].Наименование
HAVING COUNT(st1.[ID группы]) > 1
